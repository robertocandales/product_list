{"ast":null,"code":"//import { gql } from '@apollo/client';\n//export const PRODUCT_FRAGMENT = gql`\n//  fragment ProductFields on Product {\n//    id\n//    name\n//    description\n//  }\n//`;\n//export const ACTIVE_ORDER_FRAGMENT = gql`\n//  fragment ActiveOrder on Order {\n//    id\n//    subTotal\n//    total\n//  }\n//`;\n//export const GET_PRODUCTS = gql`\n//  query GetProducts($options: ProductListOptions) {\n//    products(options: $options) {\n//      totalItems\n//      items {\n//        ...ProductFields\n//        featuredAsset {\n//          source\n//          width\n//          height\n//        }\n//        variants {\n//          price\n//          productId\n//        }\n//      }\n//    }\n//  }\n//  ${PRODUCT_FRAGMENT}\n//`;\n////`;\n//export const ADD_ITEM_TO_ORDER = gql`\n//  mutation ADD_ITEM_TO_ORDER($productVariantId: ID!, $quantity: Int!) {\n//    addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n//      ...ActiveOrder\n//      ... on ErrorResult {\n//        errorCode\n//        message\n//      }\n//      ... on InsufficientStockError {\n//        quantityAvailable\n//        order {\n//          ...ActiveOrder\n//        }\n//      }\n//    }\n//  }\n//  ${ACTIVE_ORDER_FRAGMENT}\n//`;","map":{"version":3,"sources":["/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/graphql/productQuery.ts"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import { gql } from '@apollo/client';\n\n//export const PRODUCT_FRAGMENT = gql`\n//  fragment ProductFields on Product {\n//    id\n//    name\n//    description\n//  }\n//`;\n\n//export const ACTIVE_ORDER_FRAGMENT = gql`\n//  fragment ActiveOrder on Order {\n//    id\n//    subTotal\n//    total\n//  }\n//`;\n\n//export const GET_PRODUCTS = gql`\n//  query GetProducts($options: ProductListOptions) {\n//    products(options: $options) {\n//      totalItems\n//      items {\n//        ...ProductFields\n//        featuredAsset {\n//          source\n//          width\n//          height\n//        }\n//        variants {\n//          price\n//          productId\n//        }\n//      }\n//    }\n//  }\n//  ${PRODUCT_FRAGMENT}\n//`;\n\n////`;\n\n//export const ADD_ITEM_TO_ORDER = gql`\n//  mutation ADD_ITEM_TO_ORDER($productVariantId: ID!, $quantity: Int!) {\n//    addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n//      ...ActiveOrder\n//      ... on ErrorResult {\n//        errorCode\n//        message\n//      }\n//      ... on InsufficientStockError {\n//        quantityAvailable\n//        order {\n//          ...ActiveOrder\n//        }\n//      }\n//    }\n//  }\n//  ${ACTIVE_ORDER_FRAGMENT}\n//`;\n"]},"metadata":{},"sourceType":"module"}