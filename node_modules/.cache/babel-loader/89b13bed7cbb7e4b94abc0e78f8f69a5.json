{"ast":null,"code":"import { ApolloClient, ApolloLink, InMemoryCache, createHttpLink } from '@apollo/client';\nconst commerceLink = createHttpLink({\n  uri: process.env.REACT_APP_API_URL,\n  headers: {\n    authorization: localStorage.getItem('Auth-Token') ? `Bearer ${localStorage.getItem('Auth-Token')}` : ''\n  }\n});\nconst afterwareLink = new ApolloLink((operation, forward) => {\n  return forward(operation).map(response => {\n    const context = operation.getContext();\n    const authHeader = context.response.headers.get('Vendure-Auth-Token');\n\n    if (authHeader) {\n      localStorage.setItem('Auth-Token', authHeader);\n    }\n\n    return response;\n  });\n});\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([afterwareLink, commerceLink])\n});","map":{"version":3,"sources":["/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/graphql/client.ts"],"names":["ApolloClient","ApolloLink","InMemoryCache","createHttpLink","commerceLink","uri","process","env","REACT_APP_API_URL","headers","authorization","localStorage","getItem","afterwareLink","operation","forward","map","response","context","getContext","authHeader","get","setItem","client","cache","link","from"],"mappings":"AAAA,SACEA,YADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,gBALP;AAOA,MAAMC,YAAY,GAAGD,cAAc,CAAC;AAClCE,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADiB;AAGlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACV,UAASD,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC,EADlC,GAEX;AAHG;AAHyB,CAAD,CAAnC;AAUA,MAAMC,aAAa,GAAG,IAAIZ,UAAJ,CAAe,CAACa,SAAD,EAAYC,OAAZ,KAAwB;AAC3D,SAAOA,OAAO,CAACD,SAAD,CAAP,CAAmBE,GAAnB,CAAwBC,QAAD,IAAc;AAC1C,UAAMC,OAAO,GAAGJ,SAAS,CAACK,UAAV,EAAhB;AACA,UAAMC,UAAU,GAAGF,OAAO,CAACD,QAAR,CAAiBR,OAAjB,CAAyBY,GAAzB,CAA6B,oBAA7B,CAAnB;;AAEA,QAAID,UAAJ,EAAgB;AACdT,MAAAA,YAAY,CAACW,OAAb,CAAqB,YAArB,EAAmCF,UAAnC;AACD;;AACD,WAAOH,QAAP;AACD,GARM,CAAP;AASD,CAVqB,CAAtB;AAYA,OAAO,MAAMM,MAAM,GAAG,IAAIvB,YAAJ,CAAiB;AACrCwB,EAAAA,KAAK,EAAE,IAAItB,aAAJ,EAD8B;AAErCuB,EAAAA,IAAI,EAAExB,UAAU,CAACyB,IAAX,CAAgB,CAACb,aAAD,EAAgBT,YAAhB,CAAhB;AAF+B,CAAjB,CAAf","sourcesContent":["import {\n  ApolloClient,\n  ApolloLink,\n  InMemoryCache,\n  createHttpLink,\n} from '@apollo/client';\n\nconst commerceLink = createHttpLink({\n  uri: process.env.REACT_APP_API_URL,\n\n  headers: {\n    authorization: localStorage.getItem('Auth-Token')\n      ? `Bearer ${localStorage.getItem('Auth-Token')}`\n      : '',\n  },\n});\n\nconst afterwareLink = new ApolloLink((operation, forward) => {\n  return forward(operation).map((response) => {\n    const context = operation.getContext();\n    const authHeader = context.response.headers.get('Vendure-Auth-Token');\n\n    if (authHeader) {\n      localStorage.setItem('Auth-Token', authHeader);\n    }\n    return response;\n  });\n});\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([afterwareLink, commerceLink]),\n});\n"]},"metadata":{},"sourceType":"module"}