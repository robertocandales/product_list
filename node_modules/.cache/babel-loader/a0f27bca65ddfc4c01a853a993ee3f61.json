{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { GET_PRODUCT } from '../graphql/productQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductList() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_PRODUCT);\n  console.log(data, 'data');\n  console.log(error, 'error');\n  console.log(loading, 'loading');\n  const onlyThenProducts = data.products.items.slice(40);\n  console.log(onlyThenProducts, 'onlyThenProducts');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ProductList, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx"],"names":["useQuery","GET_PRODUCT","ProductList","data","loading","error","console","log","onlyThenProducts","products","items","slice"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BL,QAAQ,CAACC,WAAD,CAAzC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,MAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;AAEA,QAAMI,gBAAgB,GAAGL,IAAI,CAACM,QAAL,CAAcC,KAAd,CAAoBC,KAApB,CAA0B,EAA1B,CAAzB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ,EAA8B,kBAA9B;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GATeN,W;UACmBF,Q;;;KADnBE,W","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { GET_PRODUCT } from '../graphql/productQuery';\n\nexport function ProductList() {\n  const { data, loading, error } = useQuery(GET_PRODUCT);\n  console.log(data, 'data');\n  console.log(error, 'error');\n  console.log(loading, 'loading');\n\n  const onlyThenProducts = data.products.items.slice(40);\n  console.log(onlyThenProducts, 'onlyThenProducts');\n  return <div>List</div>;\n}\n"]},"metadata":{},"sourceType":"module"}