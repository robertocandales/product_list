{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_ITEM_TO_ORDER, GET_PRODUCTS } from '../graphql/productQuery';\nimport { Grid, Card, CardMedia, CardContent, Typography, CardActions, Button, CircularProgress, Alert, Snackbar } from '@mui/material';\nimport { useOrder } from '../store/orderProvider';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductList() {\n  _s();\n\n  var _data$products;\n\n  const {\n    addToOrder\n  } = useOrder();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      options: {\n        take: 20\n      }\n    }\n  });\n  const [addItemToOrder, {\n    loading: MutationLoading\n  }] = useMutation(ADD_ITEM_TO_ORDER, {\n    refetchQueries: [{\n      query: GET_PRODUCTS\n    }],\n    onCompleted: data => {\n      addToOrder(data === null || data === void 0 ? void 0 : data.addItemToOrder);\n    }\n  });\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleBuyClick = productId => {\n    addItemToOrder({\n      variables: {\n        productVariantId: productId,\n        quantity: 1\n      }\n    }).catch(error => {\n      setSnackbarOpen(true);\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [\"An error occurred while fetching products: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 4,\n    sx: {\n      padding: 4\n    },\n    children: [data === null || data === void 0 ? void 0 : (_data$products = data.products) === null || _data$products === void 0 ? void 0 : _data$products.items.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: product.featuredAsset.source,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), product.variants.map((variant, index) => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: [\"$\", variant.price / 100, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleBuyClick(product.id),\n            size: \"small\",\n            disabled: MutationLoading,\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      message: 'An error occurred while adding the item to the order'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductList, \"mq5/7Mrf8oGIvy0mb2ndIh4z7n4=\", false, function () {\n  return [useOrder, useQuery, useMutation];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx"],"names":["useMutation","useQuery","ADD_ITEM_TO_ORDER","GET_PRODUCTS","Grid","Card","CardMedia","CardContent","Typography","CardActions","Button","CircularProgress","Alert","Snackbar","useOrder","useState","ProductList","addToOrder","data","loading","error","variables","options","take","addItemToOrder","MutationLoading","refetchQueries","query","onCompleted","snackbarOpen","setSnackbarOpen","handleSnackbarClose","handleBuyClick","productId","productVariantId","quantity","catch","height","message","padding","products","items","map","product","featuredAsset","source","name","description","variants","variant","index","price","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,yBAAhD;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,MAPF,EAQEC,gBARF,EASEC,KATF,EAUEC,QAVF,QAWO,eAXP;AAaA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAiBH,QAAQ,EAA/B;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BnB,QAAQ,CAAmBE,YAAnB,EAAiC;AACxEkB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAX;AAD6D,GAAjC,CAAzC;AAGA,QAAM,CAACC,cAAD,EAAiB;AAAEL,IAAAA,OAAO,EAAEM;AAAX,GAAjB,IAAiDzB,WAAW,CAChEE,iBADgE,EAEhE;AACEwB,IAAAA,cAAc,EAAE,CACd;AACEC,MAAAA,KAAK,EAAExB;AADT,KADc,CADlB;AAMEyB,IAAAA,WAAW,EAAGV,IAAD,IAAU;AACrBD,MAAAA,UAAU,CAACC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,cAAP,CAAV;AACD;AARH,GAFgE,CAAlE;AAcA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMgB,mBAAmB,GAAG,MAAM;AAChCD,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAME,cAAc,GAAIC,SAAD,IAAuB;AAC5CT,IAAAA,cAAc,CAAC;AACbH,MAAAA,SAAS,EAAE;AAAEa,QAAAA,gBAAgB,EAAED,SAApB;AAA+BE,QAAAA,QAAQ,EAAE;AAAzC;AADE,KAAD,CAAd,CAEGC,KAFH,CAEUhB,KAAD,IAAW;AAClBU,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAJD;AAKD,GAND;;AAQA,MAAIX,OAAJ,EAAa;AACX,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,cAAc,EAAC,QAFjB;AAGE,MAAA,UAAU,EAAC,QAHb;AAIE,MAAA,KAAK,EAAE;AAAEkB,QAAAA,MAAM,EAAE;AAAV,OAJT;AAAA,6BAME,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,MAAIjB,KAAJ,EAAW;AACT,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,cAAc,EAAC,QAFjB;AAGE,MAAA,UAAU,EAAC,QAHb;AAIE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,MAAM,EAAE;AAAV,OAJT;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA,kEAC8CjB,KAAK,CAACkB,OADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA,eACGrB,IADH,aACGA,IADH,yCACGA,IAAI,CAAEsB,QADT,mDACG,eAAgBC,KAAhB,CAAsBC,GAAtB,CAA2BC,OAAD,iBACzB,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAA4B,MAAA,EAAE,EAAE,EAAhC;AAAoC,MAAA,EAAE,EAAE,CAAxC;AAA2C,MAAA,EAAE,EAAE,CAA/C;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,KAAK,EAAEA,OAAO,CAACC,aAAR,CAAsBC,MAH/B;AAIE,UAAA,GAAG,EAAEF,OAAO,CAACG;AAJf;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,KAAhD;AAAA,sBACGH,OAAO,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,gBAAlC;AAAA,sBACGH,OAAO,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,kBAJF,EAOGJ,OAAO,CAACK,QAAR,CAAiBN,GAAjB,CAAqB,CAACO,OAAD,EAAUC,KAAV,kBACpB,QAAC,UAAD;AAAwB,YAAA,OAAO,EAAC,IAAhC;AAAqC,YAAA,KAAK,EAAC,SAA3C;AAAA,4BACID,OAAO,CAACE,KAAR,GAAgB,GADpB;AAAA,aAAiBD,KAAjB;AAAA;AAAA;AAAA;AAAA,kBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAoBE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAMlB,cAAc,CAACW,OAAO,CAACS,EAAT,CAD/B;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,QAAQ,EAAE3B,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAgBkB,OAAO,CAACS,EAAxB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAmCE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEvB,YADR;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAEE,mBAHX;AAIE,MAAA,OAAO,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAzGef,W;UACSF,Q,EACUb,Q,EAGsBD,W;;;KALzCgB,W","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport { ADD_ITEM_TO_ORDER, GET_PRODUCTS } from '../graphql/productQuery';\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  CircularProgress,\n  Alert,\n  Snackbar,\n} from '@mui/material';\nimport { ProductsResponse } from '../interfaces/products';\nimport { useOrder } from '../store/orderProvider';\nimport { useState } from 'react';\n\nexport function ProductList() {\n  const { addToOrder } = useOrder();\n  const { data, loading, error } = useQuery<ProductsResponse>(GET_PRODUCTS, {\n    variables: { options: { take: 20 } },\n  });\n  const [addItemToOrder, { loading: MutationLoading }] = useMutation(\n    ADD_ITEM_TO_ORDER,\n    {\n      refetchQueries: [\n        {\n          query: GET_PRODUCTS,\n        },\n      ],\n      onCompleted: (data) => {\n        addToOrder(data?.addItemToOrder);\n      },\n    }\n  );\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleBuyClick = (productId: string) => {\n    addItemToOrder({\n      variables: { productVariantId: productId, quantity: 1 },\n    }).catch((error) => {\n      setSnackbarOpen(true);\n    });\n  };\n\n  if (loading) {\n    return (\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <CircularProgress />\n      </Grid>\n    );\n  }\n\n  if (error) {\n    return (\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Alert severity=\"error\">\n          An error occurred while fetching products: {error.message}\n        </Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container spacing={4} sx={{ padding: 4 }}>\n      {data?.products?.items.map((product) => (\n        <Grid item key={product.id} xs={12} sm={6} md={4}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={product.featuredAsset.source}\n              alt={product.name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {product.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {product.description}\n              </Typography>\n              {product.variants.map((variant, index: number) => (\n                <Typography key={index} variant=\"h6\" color=\"primary\">\n                  ${variant.price / 100} {/* Assuming price is in cents */}\n                </Typography>\n              ))}\n            </CardContent>\n            <CardActions>\n              <Button\n                onClick={() => handleBuyClick(product.id)}\n                size=\"small\"\n                disabled={MutationLoading}\n              >\n                Buy\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message={'An error occurred while adding the item to the order'}\n      />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}