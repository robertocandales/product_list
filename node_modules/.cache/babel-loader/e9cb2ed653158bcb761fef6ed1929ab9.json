{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Card, CardMedia, CardContent, Typography, CardActions, Button, CircularProgress, Alert, Snackbar } from '@mui/material';\nimport useProductList from '../hooks/useProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductList() {\n  _s();\n\n  const {\n    productsList,\n    loading,\n    error,\n    snackbarOpen,\n    handleBuyClick,\n    handleSnackbarClose,\n    MutationLoading\n  } = useProductList();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      \"data-testid\": \"loading-spinner\",\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [\"An error occurred while fetching products: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 4,\n    sx: {\n      padding: 4\n    },\n    children: [productsList === null || productsList === void 0 ? void 0 : productsList.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: product.featuredAsset.source,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), product.variants.map((variant, index) => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: [\"$\", variant.price / 100, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleBuyClick(product.id),\n            size: \"small\",\n            disabled: MutationLoading,\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      message: 'An error occurred while adding the item to the order'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductList, \"XyOQ+YqvQqaeoJkm5HXs1F8N0hA=\", false, function () {\n  return [useProductList];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx"],"names":["Grid","Card","CardMedia","CardContent","Typography","CardActions","Button","CircularProgress","Alert","Snackbar","useProductList","ProductList","productsList","loading","error","snackbarOpen","handleBuyClick","handleSnackbarClose","MutationLoading","height","message","padding","map","product","featuredAsset","source","name","description","variants","variant","index","price","id"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,MAPF,EAQEC,gBARF,EASEC,KATF,EAUEC,QAVF,QAWO,eAXP;AAaA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,mBANI;AAOJC,IAAAA;AAPI,MAQFR,cAAc,EARlB;;AAUA,MAAIG,OAAJ,EAAa;AACX,wBACE,QAAC,IAAD;AACE,qBAAY,iBADd;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,cAAc,EAAC,QAHjB;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OALT;AAAA,6BAOE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,MAAIL,KAAJ,EAAW;AACT,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,cAAc,EAAC,QAFjB;AAGE,MAAA,UAAU,EAAC,QAHb;AAIE,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAJT;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA,kEAC8CL,KAAK,CAACM,OADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA,eACGT,YADH,aACGA,YADH,uBACGA,YAAY,CAAEU,GAAd,CAAmBC,OAAD,iBACjB,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAA4B,MAAA,EAAE,EAAE,EAAhC;AAAoC,MAAA,EAAE,EAAE,CAAxC;AAA2C,MAAA,EAAE,EAAE,CAA/C;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,KAAK,EAAEA,OAAO,CAACC,aAAR,CAAsBC,MAH/B;AAIE,UAAA,GAAG,EAAEF,OAAO,CAACG;AAJf;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,KAAhD;AAAA,sBACGH,OAAO,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,gBAAlC;AAAA,sBACGH,OAAO,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,kBAJF,EAOGJ,OAAO,CAACK,QAAR,CAAiBN,GAAjB,CAAqB,CAACO,OAAD,EAAUC,KAAV,kBACpB,QAAC,UAAD;AAAwB,YAAA,OAAO,EAAC,IAAhC;AAAqC,YAAA,KAAK,EAAC,SAA3C;AAAA,4BACID,OAAO,CAACE,KAAR,GAAgB,GADpB;AAAA,aAAiBD,KAAjB;AAAA;AAAA;AAAA;AAAA,kBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAoBE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAMd,cAAc,CAACO,OAAO,CAACS,EAAT,CAD/B;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,QAAQ,EAAEd,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAgBK,OAAO,CAACS,EAAxB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAmCE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEjB,YADR;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAEE,mBAHX;AAIE,MAAA,OAAO,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GApFeN,W;UASVD,c;;;KATUC,W","sourcesContent":["import {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  CircularProgress,\n  Alert,\n  Snackbar,\n} from '@mui/material';\n\nimport useProductList from '../hooks/useProductList';\n\nexport function ProductList() {\n  const {\n    productsList,\n    loading,\n    error,\n    snackbarOpen,\n    handleBuyClick,\n    handleSnackbarClose,\n    MutationLoading,\n  } = useProductList();\n\n  if (loading) {\n    return (\n      <Grid\n        data-testid=\"loading-spinner\"\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <CircularProgress />\n      </Grid>\n    );\n  }\n\n  if (error) {\n    return (\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Alert severity=\"error\">\n          An error occurred while fetching products: {error.message}\n        </Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container spacing={4} sx={{ padding: 4 }}>\n      {productsList?.map((product) => (\n        <Grid item key={product.id} xs={12} sm={6} md={4}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={product.featuredAsset.source}\n              alt={product.name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {product.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {product.description}\n              </Typography>\n              {product.variants.map((variant, index: number) => (\n                <Typography key={index} variant=\"h6\" color=\"primary\">\n                  ${variant.price / 100} {/* Assuming price is in cents */}\n                </Typography>\n              ))}\n            </CardContent>\n            <CardActions>\n              <Button\n                onClick={() => handleBuyClick(product.id)}\n                size=\"small\"\n                disabled={MutationLoading}\n              >\n                Buy\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message={'An error occurred while adding the item to the order'}\n      />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}