{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { GET_PRODUCT } from '../graphql/productQuery';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ProductList() {\n  _s();\n\n  var _data$products$items;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_PRODUCT);\n  console.log(data, 'data');\n  console.log(error, 'error');\n  console.log(loading, 'loading');\n  const onlyThenProducts = data.products.items.slice(44);\n  console.log(onlyThenProducts, 'onlyThenProducts');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: ((_data$products$items = data.products.items) !== null && _data$products$items !== void 0 ? _data$products$items : []).map(product => /*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: product.featuredAsset.source,\n            alt: product.name,\n            sx: {\n              width: 56,\n              height: 56\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: product.name,\n          secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                display: 'block'\n              },\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), `Price: $${(product.variants[0].price / 100).toFixed(2)}`]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductList, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/robertocandales/Documents/Santex/challenge/santex-fe-challenge-basic (1)/src/components/ProductList.tsx"],"names":["useQuery","GET_PRODUCT","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","Box","ProductList","data","loading","error","console","log","onlyThenProducts","products","items","slice","width","maxWidth","bgcolor","map","product","featuredAsset","source","name","height","display","description","variants","price","toFixed","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,GAPF,QAQO,eARP;;;AAUA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BZ,QAAQ,CAACC,WAAD,CAAzC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,MAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;AAEA,QAAMI,gBAAgB,GAAGL,IAAI,CAACM,QAAL,CAAcC,KAAd,CAAoBC,KAApB,CAA0B,EAA1B,CAAzB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ,EAA8B,kBAA9B;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEI,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE,GAA3B;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAT;AAAA,2BACE,QAAC,IAAD;AAAA,gBACG,yBAACX,IAAI,CAACM,QAAL,CAAcC,KAAf,uEAAwB,EAAxB,EAA4BK,GAA5B,CAAiCC,OAAD,iBAC/B,QAAC,QAAD;AAAU,QAAA,UAAU,EAAC,YAArB;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAEA,OAAO,CAACC,aAAR,CAAsBC,MAF7B;AAGE,YAAA,GAAG,EAAEF,OAAO,CAACG,IAHf;AAIE,YAAA,EAAE,EAAE;AAAEP,cAAAA,KAAK,EAAE,EAAT;AAAaQ,cAAAA,MAAM,EAAE;AAArB;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,YAAD;AACE,UAAA,OAAO,EAAEJ,OAAO,CAACG,IADnB;AAEE,UAAA,SAAS,eACP;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,EAAE,EAAE;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eADN;AAEE,cAAA,SAAS,EAAC,MAFZ;AAGE,cAAA,OAAO,EAAC,OAHV;AAIE,cAAA,KAAK,EAAC,cAJR;AAAA,wBAMGL,OAAO,CAACM;AANX;AAAA;AAAA;AAAA;AAAA,oBADF,EASI,WAAU,CAACN,OAAO,CAACO,QAAR,CAAiB,CAAjB,EAAoBC,KAApB,GAA4B,GAA7B,EAAkCC,OAAlC,CAA0C,CAA1C,CAA6C,EAT3D;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAuCT,OAAO,CAACU,EAA/C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GA1CexB,W;UACmBT,Q;;;KADnBS,W","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { GET_PRODUCT } from '../graphql/productQuery';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Typography,\n  Box,\n} from '@mui/material';\n\nexport function ProductList() {\n  const { data, loading, error } = useQuery(GET_PRODUCT);\n  console.log(data, 'data');\n  console.log(error, 'error');\n  console.log(loading, 'loading');\n\n  const onlyThenProducts = data.products.items.slice(44);\n  console.log(onlyThenProducts, 'onlyThenProducts');\n  return (\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      <List>\n        {(data.products.items ?? []).map((product: any) => (\n          <ListItem alignItems=\"flex-start\" key={product.id}>\n            <ListItemAvatar>\n              <Avatar\n                variant=\"square\"\n                src={product.featuredAsset.source}\n                alt={product.name}\n                sx={{ width: 56, height: 56 }}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={\n                <>\n                  <Typography\n                    sx={{ display: 'block' }}\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"text.primary\"\n                  >\n                    {product.description}\n                  </Typography>\n                  {`Price: $${(product.variants[0].price / 100).toFixed(2)}`}\n                </>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}